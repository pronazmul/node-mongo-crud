Commands i've used:
    For Node:               npm init
    for express & Mongo:    npm install express monogodb
    For nodemon:            npm install --save-dev nodemon
    For CORS & Body-parser: npm install --save cors body-parser

**Set Script in Packege.Json
                    "start": "nodemon index.js"

**Cloud.mongoDB.com Operatons
    DB Name:                practice-mongo   
    DB UserName:            practice-mongo  
    DB Password:            rWrChfTQDtH7rG8

    @ Network Access: Dynamic For Practice Perpus
    @ Connect: Set Username & Password
    @ Connection Method: Connect to your Application
    @ Include Full Driver Code
    @ Set URI: Set Password & DB Name
    @ Cluster > Cullection > Add My own Data > Setup DB Name
    @ Set DB Name & Collection Name.
    @ Use useUnifiedTopology: true { new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });}

** Application Sent To another Directory....

        app.get('/',(req,res)=>{
            res.sendFile(__dirname +'/frontend.html')
        })


** Manually Pass Single Data in MongoDB Database.....

        client.connect(err => {
          const collection = client.db("practice-mongo").collection("crud")
                collection.insertOne({name:"sania Akter", age:20, institute:"iubat"})
                .then(result => {
                  console.log("Single User Inserted Successful")
                })
        });

** Dynamically Pass Form Data into Database......
    @Create a form using two attribute: action & Form
    @Emport Body-parser in your Application
    @Specially use {
                        app.use(bodyParser.urlecnoded({extanded:false}))
                        app.use(bodyParser.Json())
        } to get From Json Data By Body-parser...
    
    Operation: 
                    app.post("/insertData",(req,res)=>{
                    collection.insertOne(req.body)
                        .then(result => {
                        res.send("Data Successfully Submitted")
                        })
                    })





